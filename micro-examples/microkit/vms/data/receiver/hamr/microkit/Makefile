# Do not edit this file as it will be overwritten if codegen is rerun

ifeq ($(strip $(MICROKIT_SDK)),)
$(error MICROKIT_SDK must be specified)
endif
override MICROKIT_SDK := $(abspath ${MICROKIT_SDK})

SYSTEM_MAKEFILE ?= system.mk

export CPU = cortex-a53
export QEMU = qemu-system-aarch64

export AR := ar
export CC := clang
export DTC := dtc
export LD := ld.lld
export RANLIB := llvm-ranlib

export TOP_DIR := $(abspath $(dir ${MAKEFILE_LIST}))
export TOP_BUILD_DIR := $(abspath build)

export CRATES_DIR := $(TOP_DIR)/crates

export TARGET := aarch64-none-elf

# By default we make a debug build so that the client debug prints can be seen.
export MICROKIT_CONFIG ?= debug

export MICROKIT_SDK := $(abspath $(MICROKIT_SDK))
export MICROKIT_TOOL := $(abspath $(MICROKIT_SDK)/bin/microkit)
export MICROKIT_BOARD_DIR := $(abspath $(MICROKIT_SDK)/board/$(MICROKIT_BOARD)/$(MICROKIT_CONFIG))


IMAGE_FILE := $(TOP_BUILD_DIR)/loader.img
REPORT_FILE := $(TOP_BUILD_DIR)/report.txt

all: ${IMAGE_FILE}

qemu ${IMAGE_FILE} ${REPORT_FILE} clean clobber: $(IMAGE_FILE) ${TOP_BUILD_DIR}/Makefile FORCE
	${MAKE} -C ${TOP_BUILD_DIR} $(notdir $@)

${TOP_BUILD_DIR}/Makefile: $(SYSTEM_MAKEFILE)
	mkdir -p ${TOP_BUILD_DIR}
	cp $(SYSTEM_MAKEFILE) ${TOP_BUILD_DIR}/Makefile


FORCE:
