// Do not edit this file as it will be overwritten if codegen is rerun

use vstd::prelude::*;
use data::*;
use super::extern_c_api as extern_api;

verus! {
  pub trait thermostat_mt_dmf_dmf_Api {}

  pub trait thermostat_mt_dmf_dmf_Put_Api: thermostat_mt_dmf_dmf_Api {
    #[verifier::external_body]
    fn unverified_put_internal_failure(
      &mut self,
      value: Isolette_Data_Model::Failure_Flag_i) 
    {
      extern_api::unsafe_put_internal_failure(&value);
    }
  }

  pub trait thermostat_mt_dmf_dmf_Get_Api: thermostat_mt_dmf_dmf_Api {
  }

  pub trait thermostat_mt_dmf_dmf_Full_Api: thermostat_mt_dmf_dmf_Put_Api + thermostat_mt_dmf_dmf_Get_Api {}

  pub struct thermostat_mt_dmf_dmf_Application_Api<API: thermostat_mt_dmf_dmf_Api> {
    pub api: API,

    pub ghost internal_failure: Isolette_Data_Model::Failure_Flag_i
  }

  impl<API: thermostat_mt_dmf_dmf_Put_Api> thermostat_mt_dmf_dmf_Application_Api<API> {
    pub fn put_internal_failure(
      &mut self,
      value: Isolette_Data_Model::Failure_Flag_i)
      ensures
        self.internal_failure == value 
    {
      self.api.unverified_put_internal_failure(value);
      self.internal_failure = value;
    }
  }

  impl<API: thermostat_mt_dmf_dmf_Get_Api> thermostat_mt_dmf_dmf_Application_Api<API> {
  }

  pub struct thermostat_mt_dmf_dmf_Initialization_Api;
  impl thermostat_mt_dmf_dmf_Api for thermostat_mt_dmf_dmf_Initialization_Api {}
  impl thermostat_mt_dmf_dmf_Put_Api for thermostat_mt_dmf_dmf_Initialization_Api {}

  pub const fn init_api() -> thermostat_mt_dmf_dmf_Application_Api<thermostat_mt_dmf_dmf_Initialization_Api> {
    return thermostat_mt_dmf_dmf_Application_Api {
      api: thermostat_mt_dmf_dmf_Initialization_Api {},

      internal_failure: Isolette_Data_Model::Failure_Flag_i { flag: false }
    }
  }

  pub struct thermostat_mt_dmf_dmf_Compute_Api;
  impl thermostat_mt_dmf_dmf_Api for thermostat_mt_dmf_dmf_Compute_Api {}
  impl thermostat_mt_dmf_dmf_Put_Api for thermostat_mt_dmf_dmf_Compute_Api {}
  impl thermostat_mt_dmf_dmf_Get_Api for thermostat_mt_dmf_dmf_Compute_Api {}
  impl thermostat_mt_dmf_dmf_Full_Api for thermostat_mt_dmf_dmf_Compute_Api {}

  pub const fn compute_api() -> thermostat_mt_dmf_dmf_Application_Api<thermostat_mt_dmf_dmf_Compute_Api> {
    return thermostat_mt_dmf_dmf_Application_Api {
      api: thermostat_mt_dmf_dmf_Compute_Api {},

      internal_failure: Isolette_Data_Model::Failure_Flag_i { flag: false }
    }
  }
}