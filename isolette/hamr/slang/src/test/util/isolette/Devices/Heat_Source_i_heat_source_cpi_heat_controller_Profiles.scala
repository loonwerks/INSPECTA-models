// #Sireum

package isolette.Devices

import org.sireum._
import isolette.util.Profile
import isolette.util.EmptyContainer
import isolette.RandomLib

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

// Profile for initialise entrypoint
@msig trait Heat_Source_i_heat_source_cpi_heat_controller_Profile_Trait extends Profile

@record class Heat_Source_i_heat_source_cpi_heat_controller_Profile (
  val name: String,
) extends Heat_Source_i_heat_source_cpi_heat_controller_Profile_Trait {

  override def next: EmptyContainer = {
    return EmptyContainer()
  }
}

// Profile with generators for incoming ports
@msig trait Heat_Source_i_heat_source_cpi_heat_controller_Profile_P_Trait extends Profile {
  def api_heat_control: RandomLib // random lib for generating Isolette_Data_Model.On_Off
}

@record class Heat_Source_i_heat_source_cpi_heat_controller_Profile_P(
  val name: String,
  var api_heat_control: RandomLib // random lib for generating Isolette_Data_Model.On_Off
  ) extends Heat_Source_i_heat_source_cpi_heat_controller_Profile_P_Trait {

  override def next: Heat_Source_i_heat_source_cpi_heat_controller_PreState_Container_P = {
    return (Heat_Source_i_heat_source_cpi_heat_controller_PreState_Container_P (
      api_heat_control = api_heat_control.nextIsolette_Data_ModelOn_OffType()))
  }
}

// Profile with generators for state variables and incoming ports
@msig trait Heat_Source_i_heat_source_cpi_heat_controller_Profile_PS_Trait extends Heat_Source_i_heat_source_cpi_heat_controller_Profile_P_Trait {
  def api_heat_control: RandomLib // random lib for generating Isolette_Data_Model.On_Off
}

@record class Heat_Source_i_heat_source_cpi_heat_controller_Profile_PS(
  val name: String,
  var api_heat_control: RandomLib // random lib for generating Isolette_Data_Model.On_Off
  ) extends Heat_Source_i_heat_source_cpi_heat_controller_Profile_PS_Trait {

  override def next: Heat_Source_i_heat_source_cpi_heat_controller_PreState_Container_PS = {
    return (Heat_Source_i_heat_source_cpi_heat_controller_PreState_Container_PS (
      api_heat_control = api_heat_control.nextIsolette_Data_ModelOn_OffType()))
  }
}
