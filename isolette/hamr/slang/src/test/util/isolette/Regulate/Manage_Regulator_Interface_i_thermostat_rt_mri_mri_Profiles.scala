// #Sireum

package isolette.Regulate

import org.sireum._
import isolette.util.Profile
import isolette.util.EmptyContainer
import isolette.RandomLib

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

// Profile for initialise entrypoint
@msig trait Manage_Regulator_Interface_i_thermostat_rt_mri_mri_Profile_Trait extends Profile

@record class Manage_Regulator_Interface_i_thermostat_rt_mri_mri_Profile (
  val name: String,
) extends Manage_Regulator_Interface_i_thermostat_rt_mri_mri_Profile_Trait {

  override def next: EmptyContainer = {
    return EmptyContainer()
  }
}

// Profile with generators for incoming ports
@msig trait Manage_Regulator_Interface_i_thermostat_rt_mri_mri_Profile_P_Trait extends Profile {
  def api_current_tempWstatus: RandomLib // random lib for generating Isolette_Data_Model.TempWstatus_i
  def api_lower_desired_tempWstatus: RandomLib // random lib for generating Isolette_Data_Model.TempWstatus_i
  def api_regulator_mode: RandomLib // random lib for generating Isolette_Data_Model.Regulator_Mode
  def api_upper_desired_tempWstatus: RandomLib // random lib for generating Isolette_Data_Model.TempWstatus_i
}

@record class Manage_Regulator_Interface_i_thermostat_rt_mri_mri_Profile_P(
  val name: String,
  var api_current_tempWstatus: RandomLib, // random lib for generating Isolette_Data_Model.TempWstatus_i
  var api_lower_desired_tempWstatus: RandomLib, // random lib for generating Isolette_Data_Model.TempWstatus_i
  var api_regulator_mode: RandomLib, // random lib for generating Isolette_Data_Model.Regulator_Mode
  var api_upper_desired_tempWstatus: RandomLib // random lib for generating Isolette_Data_Model.TempWstatus_i
  ) extends Manage_Regulator_Interface_i_thermostat_rt_mri_mri_Profile_P_Trait {

  override def next: Manage_Regulator_Interface_i_thermostat_rt_mri_mri_PreState_Container_P = {
    return (Manage_Regulator_Interface_i_thermostat_rt_mri_mri_PreState_Container_P (
      api_current_tempWstatus = api_current_tempWstatus.nextIsolette_Data_ModelTempWstatus_i(),
      api_lower_desired_tempWstatus = api_lower_desired_tempWstatus.nextIsolette_Data_ModelTempWstatus_i(),
      api_regulator_mode = api_regulator_mode.nextIsolette_Data_ModelRegulator_ModeType(),
      api_upper_desired_tempWstatus = api_upper_desired_tempWstatus.nextIsolette_Data_ModelTempWstatus_i()))
  }
}

// Profile with generators for state variables and incoming ports
@msig trait Manage_Regulator_Interface_i_thermostat_rt_mri_mri_Profile_PS_Trait extends Manage_Regulator_Interface_i_thermostat_rt_mri_mri_Profile_P_Trait {
  def api_current_tempWstatus: RandomLib // random lib for generating Isolette_Data_Model.TempWstatus_i
  def api_lower_desired_tempWstatus: RandomLib // random lib for generating Isolette_Data_Model.TempWstatus_i
  def api_regulator_mode: RandomLib // random lib for generating Isolette_Data_Model.Regulator_Mode
  def api_upper_desired_tempWstatus: RandomLib // random lib for generating Isolette_Data_Model.TempWstatus_i
}

@record class Manage_Regulator_Interface_i_thermostat_rt_mri_mri_Profile_PS(
  val name: String,
  var api_current_tempWstatus: RandomLib, // random lib for generating Isolette_Data_Model.TempWstatus_i
  var api_lower_desired_tempWstatus: RandomLib, // random lib for generating Isolette_Data_Model.TempWstatus_i
  var api_regulator_mode: RandomLib, // random lib for generating Isolette_Data_Model.Regulator_Mode
  var api_upper_desired_tempWstatus: RandomLib // random lib for generating Isolette_Data_Model.TempWstatus_i
  ) extends Manage_Regulator_Interface_i_thermostat_rt_mri_mri_Profile_PS_Trait {

  override def next: Manage_Regulator_Interface_i_thermostat_rt_mri_mri_PreState_Container_PS = {
    return (Manage_Regulator_Interface_i_thermostat_rt_mri_mri_PreState_Container_PS (
      api_current_tempWstatus = api_current_tempWstatus.nextIsolette_Data_ModelTempWstatus_i(),
      api_lower_desired_tempWstatus = api_lower_desired_tempWstatus.nextIsolette_Data_ModelTempWstatus_i(),
      api_regulator_mode = api_regulator_mode.nextIsolette_Data_ModelRegulator_ModeType(),
      api_upper_desired_tempWstatus = api_upper_desired_tempWstatus.nextIsolette_Data_ModelTempWstatus_i()))
  }
}
