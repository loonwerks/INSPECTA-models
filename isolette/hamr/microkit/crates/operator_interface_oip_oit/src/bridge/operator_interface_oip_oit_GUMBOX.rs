// Do not edit this file as it will be overwritten if codegen is rerun

use data::*;

macro_rules! implies {
  ($lhs: expr, $rhs: expr) => {
    !$lhs || $rhs
  };
}

macro_rules! impliesL {
  ($lhs: expr, $rhs: expr) => {
    !$lhs | $rhs
  };
}

/** I-Guar: Integration constraint on oit's outgoing data port lower_alarm_tempWstatus
  *
  * guarantee Table_A_12_LowerAlarmTemp
  *  Range [96..101]
  *  http://pub.santoslab.org/high-assurance/module-requirements/reading/FAA-DoT-Requirements-AR-08-32.pdf#page=112 
  */
pub fn I_Guar_lower_alarm_tempWstatus(lower_alarm_tempWstatus: Isolette_Data_Model::TempWstatus_i) -> bool 
 {
   (96i32 <= lower_alarm_tempWstatus.degrees) &&
     (lower_alarm_tempWstatus.degrees <= 101i32)
 }

/** I-Guar: Integration constraint on oit's outgoing data port upper_alarm_tempWstatus
  *
  * guarantee Table_A_12_UpperAlarmTemp
  *  Range [97..102]
  *  http://pub.santoslab.org/high-assurance/module-requirements/reading/FAA-DoT-Requirements-AR-08-32.pdf#page=112 
  */
pub fn I_Guar_upper_alarm_tempWstatus(upper_alarm_tempWstatus: Isolette_Data_Model::TempWstatus_i) -> bool 
 {
   (97i32 <= upper_alarm_tempWstatus.degrees) &&
     (upper_alarm_tempWstatus.degrees <= 102i32)
 }

/** IEP-Post: Initialize Entrypoint Post-Condition
  *
  * @param api_lower_alarm_tempWstatus outgoing data port
  * @param api_lower_desired_tempWstatus outgoing data port
  * @param api_upper_alarm_tempWstatus outgoing data port
  * @param api_upper_desired_tempWstatus outgoing data port
  */
pub fn initialize_IEP_Post(
  api_lower_alarm_tempWstatus: Isolette_Data_Model::TempWstatus_i,
  api_lower_desired_tempWstatus: Isolette_Data_Model::TempWstatus_i,
  api_upper_alarm_tempWstatus: Isolette_Data_Model::TempWstatus_i,
  api_upper_desired_tempWstatus: Isolette_Data_Model::TempWstatus_i) -> bool 
 {
   // I-Guar-Guard: Integration constraints for oit's outgoing ports"
   I_Guar_lower_alarm_tempWstatus(api_lower_alarm_tempWstatus) &
   I_Guar_upper_alarm_tempWstatus(api_upper_alarm_tempWstatus)
 }

/** CEP-Post: Compute Entrypoint Post-Condition for oit
  *
  * @param api_alarm_control incoming data port
  * @param api_display_temperature incoming data port
  * @param api_monitor_status incoming data port
  * @param api_regulator_status incoming data port
  * @param api_lower_alarm_tempWstatus outgoing data port
  * @param api_lower_desired_tempWstatus outgoing data port
  * @param api_upper_alarm_tempWstatus outgoing data port
  * @param api_upper_desired_tempWstatus outgoing data port
  */
pub fn compute_CEP_Post(
  api_alarm_control: Isolette_Data_Model::On_Off,
  api_display_temperature: Isolette_Data_Model::Temp_i,
  api_monitor_status: Isolette_Data_Model::Status,
  api_regulator_status: Isolette_Data_Model::Status,
  api_lower_alarm_tempWstatus: Isolette_Data_Model::TempWstatus_i,
  api_lower_desired_tempWstatus: Isolette_Data_Model::TempWstatus_i,
  api_upper_alarm_tempWstatus: Isolette_Data_Model::TempWstatus_i,
  api_upper_desired_tempWstatus: Isolette_Data_Model::TempWstatus_i) -> bool 
 {
   // I-Guar-Guard: Integration constraints for oit's outgoing ports
   let r0: bool = I_Guar_lower_alarm_tempWstatus(api_lower_alarm_tempWstatus);
   let r1: bool = I_Guar_upper_alarm_tempWstatus(api_upper_alarm_tempWstatus);

   return r0 && r1;
 }
