#pragma once

#include <stdbool.h>
#include <stdint.h>

// Do not edit this file as it will be overwritten if codegen is rerun

typedef
  enum {Valid, Invalid} Isolette_Data_Model_ValueStatus;

typedef
  enum {Init_Regulator_Mode, Normal_Regulator_Mode, Failed_Regulator_Mode} Isolette_Data_Model_Regulator_Mode;

typedef
  enum {Init_Status, On_Status, Failed_Status} Isolette_Data_Model_Status;

typedef
  enum {Onn, Off} Isolette_Data_Model_On_Off;

typedef
  enum {Init_Monitor_Mode, Normal_Monitor_Mode, Failed_Monitor_Mode} Isolette_Data_Model_Monitor_Mode;

typedef
  enum {Dummy_Head_Enum} Isolette_Environment_Heat;

typedef struct Isolette_Data_Model_Temp_i {
  int32_t degrees;
} Isolette_Data_Model_Temp_i;

typedef struct Isolette_Data_Model_PhysicalTemp_i {
  int32_t degrees;
} Isolette_Data_Model_PhysicalTemp_i;

typedef struct Isolette_Data_Model_TempWstatus_i {
  int32_t degrees;
  Isolette_Data_Model_ValueStatus status;
} Isolette_Data_Model_TempWstatus_i;

typedef struct Isolette_Data_Model_Failure_Flag_i {
  bool flag;
} Isolette_Data_Model_Failure_Flag_i;
