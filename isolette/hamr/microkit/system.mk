# Do not edit this file as it will be overwritten if codegen is rerun

ifeq ($(strip $(MICROKIT_SDK)),)
$(error MICROKIT_SDK must be specified)
endif

MICROKIT_TOOL ?= $(MICROKIT_SDK)/bin/microkit

ifeq ("$(wildcard $(MICROKIT_TOOL))","")
$(error Microkit tool not found at ${MICROKIT_TOOL})
endif

ifeq ($(strip $(MICROKIT_BOARD)),)
$(error MICROKIT_BOARD must be specified)
endif

CFLAGS := -mcpu=$(CPU) \
	-mstrict-align \
	-ffreestanding \
	-nostdlib \
	-g3 \
	-O3 \
	-Wall -Wno-unused-function -Werror -Wno-unused-command-line-argument \
	-I$(MICROKIT_BOARD_DIR)/include \
	-target $(TARGET)

LDFLAGS := -L$(MICROKIT_BOARD_DIR)/lib
LIBS := --start-group -lmicrokit -Tmicrokit.ld --end-group

SYSTEM_FILE := $(TOP_DIR)/microkit.system

IMAGES := thermostat_rt_mri_mri.elf thermostat_rt_mri_mri_MON.elf thermostat_rt_mhs_mhs.elf thermostat_rt_mhs_mhs_MON.elf thermostat_rt_mrm_mrm.elf thermostat_rt_mrm_mrm_MON.elf thermostat_rt_drf_drf.elf thermostat_rt_drf_drf_MON.elf thermostat_mt_mmi_mmi.elf thermostat_mt_mmi_mmi_MON.elf thermostat_mt_ma_ma.elf thermostat_mt_ma_ma_MON.elf thermostat_mt_mmm_mmm.elf thermostat_mt_mmm_mmm_MON.elf thermostat_mt_dmf_dmf.elf thermostat_mt_dmf_dmf_MON.elf operator_interface_oip_oit.elf operator_interface_oip_oit_MON.elf temperature_sensor_cpi_thermostat.elf temperature_sensor_cpi_thermostat_MON.elf heat_source_cpi_heat_controller.elf heat_source_cpi_heat_controller_MON.elf pacer.elf
IMAGE_FILE = loader.img
REPORT_FILE = report.txt

UTIL_OBJS = printf.o util.o

TYPES_DIR = $(TOP_DIR)/types
TYPE_OBJS := $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Temp_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Temp_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Temp_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Status_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Failure_Flag_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_On_Off_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Regulator_Mode_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Failure_Flag_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Temp_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Temp_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Status_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Failure_Flag_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_On_Off_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Monitor_Mode_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Failure_Flag_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_TempWstatus_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_TempWstatus_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_TempWstatus_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_TempWstatus_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_TempWstatus_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Data_Model_PhysicalTemp_i_1.o $(TOP_DIR)/build/sb_queue_Isolette_Environment_Heat_1.o

# exporting TOP_TYPES_INCLUDE in case other makefiles need it
export TOP_TYPES_INCLUDE = -I$(TYPES_DIR)/include

TOP_INCLUDE = $(TOP_TYPES_INCLUDE) -I$(TOP_DIR)/util/include

all: $(IMAGE_FILE)
	CHECK_FLAGS_BOARD_MD5:=.board_cflags-$(shell echo -- ${CFLAGS} ${MICROKIT_BOARD} ${MICROKIT_CONFIG}| shasum | sed 's/ *-//')

${CHECK_FLAGS_BOARD_MD5}:
	-rm -f .board_cflags-*
	touch $@

%.o: ${TOP_DIR}/util/src/%.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ -I$(TOP_DIR)/util/include

$(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Temp_i_1.o: $(TOP_DIR)/types/src/sb_queue_Isolette_Data_Model_Temp_i_1.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE)


$(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Status_1.o: $(TOP_DIR)/types/src/sb_queue_Isolette_Data_Model_Status_1.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE)


$(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Failure_Flag_i_1.o: $(TOP_DIR)/types/src/sb_queue_Isolette_Data_Model_Failure_Flag_i_1.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE)


$(TOP_DIR)/build/sb_queue_Isolette_Data_Model_On_Off_1.o: $(TOP_DIR)/types/src/sb_queue_Isolette_Data_Model_On_Off_1.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE)


$(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Regulator_Mode_1.o: $(TOP_DIR)/types/src/sb_queue_Isolette_Data_Model_Regulator_Mode_1.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE)


$(TOP_DIR)/build/sb_queue_Isolette_Data_Model_Monitor_Mode_1.o: $(TOP_DIR)/types/src/sb_queue_Isolette_Data_Model_Monitor_Mode_1.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE)


$(TOP_DIR)/build/sb_queue_Isolette_Data_Model_TempWstatus_i_1.o: $(TOP_DIR)/types/src/sb_queue_Isolette_Data_Model_TempWstatus_i_1.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE)


$(TOP_DIR)/build/sb_queue_Isolette_Data_Model_PhysicalTemp_i_1.o: $(TOP_DIR)/types/src/sb_queue_Isolette_Data_Model_PhysicalTemp_i_1.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE)


$(TOP_DIR)/build/sb_queue_Isolette_Environment_Heat_1.o: $(TOP_DIR)/types/src/sb_queue_Isolette_Environment_Heat_1.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE)


# monitor
thermostat_rt_mri_mri_MON.o: $(TOP_DIR)/components/thermostat_rt_mri_mri/src/thermostat_rt_mri_mri_MON.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_rt_mri_mri/include

# user code
thermostat_rt_mri_mri_rust:
	make -C ${CRATES_DIR}/thermostat_rt_mri_mri $(RUST_MAKE_TARGET)

thermostat_rt_mri_mri.o: $(TOP_DIR)/components/thermostat_rt_mri_mri/src/thermostat_rt_mri_mri.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_rt_mri_mri/include

# monitor
thermostat_rt_mhs_mhs_MON.o: $(TOP_DIR)/components/thermostat_rt_mhs_mhs/src/thermostat_rt_mhs_mhs_MON.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_rt_mhs_mhs/include

# user code
thermostat_rt_mhs_mhs_rust:
	make -C ${CRATES_DIR}/thermostat_rt_mhs_mhs $(RUST_MAKE_TARGET)

thermostat_rt_mhs_mhs.o: $(TOP_DIR)/components/thermostat_rt_mhs_mhs/src/thermostat_rt_mhs_mhs.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_rt_mhs_mhs/include

# monitor
thermostat_rt_mrm_mrm_MON.o: $(TOP_DIR)/components/thermostat_rt_mrm_mrm/src/thermostat_rt_mrm_mrm_MON.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_rt_mrm_mrm/include

# user code
thermostat_rt_mrm_mrm_rust:
	make -C ${CRATES_DIR}/thermostat_rt_mrm_mrm $(RUST_MAKE_TARGET)

thermostat_rt_mrm_mrm.o: $(TOP_DIR)/components/thermostat_rt_mrm_mrm/src/thermostat_rt_mrm_mrm.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_rt_mrm_mrm/include

# monitor
thermostat_rt_drf_drf_MON.o: $(TOP_DIR)/components/thermostat_rt_drf_drf/src/thermostat_rt_drf_drf_MON.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_rt_drf_drf/include

# user code
thermostat_rt_drf_drf_rust:
	make -C ${CRATES_DIR}/thermostat_rt_drf_drf $(RUST_MAKE_TARGET)

thermostat_rt_drf_drf.o: $(TOP_DIR)/components/thermostat_rt_drf_drf/src/thermostat_rt_drf_drf.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_rt_drf_drf/include

# monitor
thermostat_mt_mmi_mmi_MON.o: $(TOP_DIR)/components/thermostat_mt_mmi_mmi/src/thermostat_mt_mmi_mmi_MON.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_mt_mmi_mmi/include

# user code
thermostat_mt_mmi_mmi_rust:
	make -C ${CRATES_DIR}/thermostat_mt_mmi_mmi $(RUST_MAKE_TARGET)

thermostat_mt_mmi_mmi.o: $(TOP_DIR)/components/thermostat_mt_mmi_mmi/src/thermostat_mt_mmi_mmi.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_mt_mmi_mmi/include

# monitor
thermostat_mt_ma_ma_MON.o: $(TOP_DIR)/components/thermostat_mt_ma_ma/src/thermostat_mt_ma_ma_MON.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_mt_ma_ma/include

# user code
thermostat_mt_ma_ma_rust:
	make -C ${CRATES_DIR}/thermostat_mt_ma_ma $(RUST_MAKE_TARGET)

thermostat_mt_ma_ma.o: $(TOP_DIR)/components/thermostat_mt_ma_ma/src/thermostat_mt_ma_ma.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_mt_ma_ma/include

# monitor
thermostat_mt_mmm_mmm_MON.o: $(TOP_DIR)/components/thermostat_mt_mmm_mmm/src/thermostat_mt_mmm_mmm_MON.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_mt_mmm_mmm/include

# user code
thermostat_mt_mmm_mmm_rust:
	make -C ${CRATES_DIR}/thermostat_mt_mmm_mmm $(RUST_MAKE_TARGET)

thermostat_mt_mmm_mmm.o: $(TOP_DIR)/components/thermostat_mt_mmm_mmm/src/thermostat_mt_mmm_mmm.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_mt_mmm_mmm/include

# monitor
thermostat_mt_dmf_dmf_MON.o: $(TOP_DIR)/components/thermostat_mt_dmf_dmf/src/thermostat_mt_dmf_dmf_MON.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_mt_dmf_dmf/include

# user code
thermostat_mt_dmf_dmf_rust:
	make -C ${CRATES_DIR}/thermostat_mt_dmf_dmf $(RUST_MAKE_TARGET)

thermostat_mt_dmf_dmf.o: $(TOP_DIR)/components/thermostat_mt_dmf_dmf/src/thermostat_mt_dmf_dmf.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/thermostat_mt_dmf_dmf/include

# monitor
operator_interface_oip_oit_MON.o: $(TOP_DIR)/components/operator_interface_oip_oit/src/operator_interface_oip_oit_MON.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/operator_interface_oip_oit/include

# user code
operator_interface_oip_oit_rust:
	make -C ${CRATES_DIR}/operator_interface_oip_oit $(RUST_MAKE_TARGET)

operator_interface_oip_oit.o: $(TOP_DIR)/components/operator_interface_oip_oit/src/operator_interface_oip_oit.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/operator_interface_oip_oit/include

# monitor
temperature_sensor_cpi_thermostat_MON.o: $(TOP_DIR)/components/temperature_sensor_cpi_thermostat/src/temperature_sensor_cpi_thermostat_MON.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/temperature_sensor_cpi_thermostat/include

# user code
temperature_sensor_cpi_thermostat_user.o: $(TOP_DIR)/components/temperature_sensor_cpi_thermostat/src/temperature_sensor_cpi_thermostat_user.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE)/ -I$(TOP_DIR)/components/temperature_sensor_cpi_thermostat/include

temperature_sensor_cpi_thermostat.o: $(TOP_DIR)/components/temperature_sensor_cpi_thermostat/src/temperature_sensor_cpi_thermostat.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/temperature_sensor_cpi_thermostat/include

# monitor
heat_source_cpi_heat_controller_MON.o: $(TOP_DIR)/components/heat_source_cpi_heat_controller/src/heat_source_cpi_heat_controller_MON.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/heat_source_cpi_heat_controller/include

# user code
heat_source_cpi_heat_controller_user.o: $(TOP_DIR)/components/heat_source_cpi_heat_controller/src/heat_source_cpi_heat_controller_user.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE)/ -I$(TOP_DIR)/components/heat_source_cpi_heat_controller/include

heat_source_cpi_heat_controller.o: $(TOP_DIR)/components/heat_source_cpi_heat_controller/src/heat_source_cpi_heat_controller.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ $(TOP_INCLUDE) -I$(TOP_DIR)/components/heat_source_cpi_heat_controller/include

pacer.o: $(TOP_DIR)/components/pacer/src/pacer.c Makefile
	$(CC) -c $(CFLAGS) $< -o $@ -I$(TOP_INCLUDE)

thermostat_rt_mri_mri_MON.elf: thermostat_rt_mri_mri_MON.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

thermostat_rt_mri_mri.elf: $(UTIL_OBJS) $(TYPE_OBJS) thermostat_rt_mri_mri_rust thermostat_rt_mri_mri.o
	$(LD) $(LDFLAGS) -L ${CRATES_DIR}/thermostat_rt_mri_mri/target/aarch64-unknown-none/release $(filter %.o, $^) $(LIBS) -lthermostat_rt_mri_mri -o $@

thermostat_rt_mhs_mhs_MON.elf: thermostat_rt_mhs_mhs_MON.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

thermostat_rt_mhs_mhs.elf: $(UTIL_OBJS) $(TYPE_OBJS) thermostat_rt_mhs_mhs_rust thermostat_rt_mhs_mhs.o
	$(LD) $(LDFLAGS) -L ${CRATES_DIR}/thermostat_rt_mhs_mhs/target/aarch64-unknown-none/release $(filter %.o, $^) $(LIBS) -lthermostat_rt_mhs_mhs -o $@

thermostat_rt_mrm_mrm_MON.elf: thermostat_rt_mrm_mrm_MON.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

thermostat_rt_mrm_mrm.elf: $(UTIL_OBJS) $(TYPE_OBJS) thermostat_rt_mrm_mrm_rust thermostat_rt_mrm_mrm.o
	$(LD) $(LDFLAGS) -L ${CRATES_DIR}/thermostat_rt_mrm_mrm/target/aarch64-unknown-none/release $(filter %.o, $^) $(LIBS) -lthermostat_rt_mrm_mrm -o $@

thermostat_rt_drf_drf_MON.elf: thermostat_rt_drf_drf_MON.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

thermostat_rt_drf_drf.elf: $(UTIL_OBJS) $(TYPE_OBJS) thermostat_rt_drf_drf_rust thermostat_rt_drf_drf.o
	$(LD) $(LDFLAGS) -L ${CRATES_DIR}/thermostat_rt_drf_drf/target/aarch64-unknown-none/release $(filter %.o, $^) $(LIBS) -lthermostat_rt_drf_drf -o $@

thermostat_mt_mmi_mmi_MON.elf: thermostat_mt_mmi_mmi_MON.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

thermostat_mt_mmi_mmi.elf: $(UTIL_OBJS) $(TYPE_OBJS) thermostat_mt_mmi_mmi_rust thermostat_mt_mmi_mmi.o
	$(LD) $(LDFLAGS) -L ${CRATES_DIR}/thermostat_mt_mmi_mmi/target/aarch64-unknown-none/release $(filter %.o, $^) $(LIBS) -lthermostat_mt_mmi_mmi -o $@

thermostat_mt_ma_ma_MON.elf: thermostat_mt_ma_ma_MON.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

thermostat_mt_ma_ma.elf: $(UTIL_OBJS) $(TYPE_OBJS) thermostat_mt_ma_ma_rust thermostat_mt_ma_ma.o
	$(LD) $(LDFLAGS) -L ${CRATES_DIR}/thermostat_mt_ma_ma/target/aarch64-unknown-none/release $(filter %.o, $^) $(LIBS) -lthermostat_mt_ma_ma -o $@

thermostat_mt_mmm_mmm_MON.elf: thermostat_mt_mmm_mmm_MON.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

thermostat_mt_mmm_mmm.elf: $(UTIL_OBJS) $(TYPE_OBJS) thermostat_mt_mmm_mmm_rust thermostat_mt_mmm_mmm.o
	$(LD) $(LDFLAGS) -L ${CRATES_DIR}/thermostat_mt_mmm_mmm/target/aarch64-unknown-none/release $(filter %.o, $^) $(LIBS) -lthermostat_mt_mmm_mmm -o $@

thermostat_mt_dmf_dmf_MON.elf: thermostat_mt_dmf_dmf_MON.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

thermostat_mt_dmf_dmf.elf: $(UTIL_OBJS) $(TYPE_OBJS) thermostat_mt_dmf_dmf_rust thermostat_mt_dmf_dmf.o
	$(LD) $(LDFLAGS) -L ${CRATES_DIR}/thermostat_mt_dmf_dmf/target/aarch64-unknown-none/release $(filter %.o, $^) $(LIBS) -lthermostat_mt_dmf_dmf -o $@

operator_interface_oip_oit_MON.elf: operator_interface_oip_oit_MON.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

operator_interface_oip_oit.elf: $(UTIL_OBJS) $(TYPE_OBJS) operator_interface_oip_oit_rust operator_interface_oip_oit.o
	$(LD) $(LDFLAGS) -L ${CRATES_DIR}/operator_interface_oip_oit/target/aarch64-unknown-none/release $(filter %.o, $^) $(LIBS) -loperator_interface_oip_oit -o $@

temperature_sensor_cpi_thermostat_MON.elf: temperature_sensor_cpi_thermostat_MON.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

temperature_sensor_cpi_thermostat.elf: $(UTIL_OBJS) $(TYPE_OBJS) temperature_sensor_cpi_thermostat_user.o temperature_sensor_cpi_thermostat.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

heat_source_cpi_heat_controller_MON.elf: heat_source_cpi_heat_controller_MON.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

heat_source_cpi_heat_controller.elf: $(UTIL_OBJS) $(TYPE_OBJS) heat_source_cpi_heat_controller_user.o heat_source_cpi_heat_controller.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

pacer.elf: $(UTIL_OBJS) $(TYPE_OBJS) pacer.o
	$(LD) $(LDFLAGS) $^ $(LIBS) -o $@

$(IMAGE_FILE): $(IMAGES) $(SYSTEM_FILE)
	$(MICROKIT_TOOL) $(SYSTEM_FILE) --search-path $(TOP_BUILD_DIR) --board $(MICROKIT_BOARD) --config $(MICROKIT_CONFIG) -o $(IMAGE_FILE) -r $(REPORT_FILE)


qemu: $(IMAGE_FILE)
	$(QEMU) -machine virt,virtualization=on \
			-cpu cortex-a53 \
			-serial mon:stdio \
			-device loader,file=$(IMAGE_FILE),addr=0x70000000,cpu-num=0 \
			-m size=2G \
			-nographic

clean::
	rm -f ${(oFiles, " ")}

clobber:: clean
	rm -f thermostat_rt_mri_mri.elf thermostat_rt_mri_mri_MON.elf thermostat_rt_mhs_mhs.elf thermostat_rt_mhs_mhs_MON.elf thermostat_rt_mrm_mrm.elf thermostat_rt_mrm_mrm_MON.elf thermostat_rt_drf_drf.elf thermostat_rt_drf_drf_MON.elf thermostat_mt_mmi_mmi.elf thermostat_mt_mmi_mmi_MON.elf thermostat_mt_ma_ma.elf thermostat_mt_ma_ma_MON.elf thermostat_mt_mmm_mmm.elf thermostat_mt_mmm_mmm_MON.elf thermostat_mt_dmf_dmf.elf thermostat_mt_dmf_dmf_MON.elf operator_interface_oip_oit.elf operator_interface_oip_oit_MON.elf temperature_sensor_cpi_thermostat.elf temperature_sensor_cpi_thermostat_MON.elf heat_source_cpi_heat_controller.elf heat_source_cpi_heat_controller_MON.elf pacer.elf ${IMAGE_FILE} ${REPORT_FILE}
