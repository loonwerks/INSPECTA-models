// Do not edit this file as it will be overwritten if codegen is rerun

use vstd::prelude::*;
use data::*;
use super::extern_c_api as extern_api;

verus! {
  pub trait Firewall_Firewall_Api {}

  pub trait Firewall_Firewall_Put_Api: Firewall_Firewall_Api {
    #[verifier::external_body]
    fn unverified_put_EthernetFramesRxOut(
      &mut self,
      value: SW::RawEthernetMessage) 
    {
      extern_api::unsafe_put_EthernetFramesRxOut(&value);
    }

    #[verifier::external_body]
    fn unverified_put_EthernetFramesTxOut(
      &mut self,
      value: SW::RawEthernetMessage) 
    {
      extern_api::unsafe_put_EthernetFramesTxOut(&value);
    }
  }

  pub trait Firewall_Firewall_Get_Api: Firewall_Firewall_Api {
    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxIn(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxIn();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxIn(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxIn();
    }
  }

  pub trait Firewall_Firewall_Full_Api: Firewall_Firewall_Put_Api + Firewall_Firewall_Get_Api {}

  pub struct Firewall_Firewall_Application_Api<API: Firewall_Firewall_Api> {
    pub api: API,

    pub ghost EthernetFramesTxIn: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxOut: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesTxOut: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxIn: Option<SW::RawEthernetMessage>
  }

  impl<API: Firewall_Firewall_Put_Api> Firewall_Firewall_Application_Api<API> {
    pub fn put_EthernetFramesRxOut(
      &mut self,
      value: SW::RawEthernetMessage)
      ensures
        old(self).EthernetFramesRxIn == self.EthernetFramesRxIn,
        self.EthernetFramesRxOut == Some(value),
        old(self).EthernetFramesTxIn == self.EthernetFramesTxIn,
        old(self).EthernetFramesTxOut == self.EthernetFramesTxOut 
    {
      self.api.unverified_put_EthernetFramesRxOut(value);
      self.EthernetFramesRxOut = Some(value);
    }
    pub fn put_EthernetFramesTxOut(
      &mut self,
      value: SW::RawEthernetMessage)
      ensures
        old(self).EthernetFramesRxIn == self.EthernetFramesRxIn,
        old(self).EthernetFramesRxOut == self.EthernetFramesRxOut,
        old(self).EthernetFramesTxIn == self.EthernetFramesTxIn,
        self.EthernetFramesTxOut == Some(value) 
    {
      self.api.unverified_put_EthernetFramesTxOut(value);
      self.EthernetFramesTxOut = Some(value);
    }
  }

  impl<API: Firewall_Firewall_Get_Api> Firewall_Firewall_Application_Api<API> {
    pub fn get_EthernetFramesTxIn(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxIn == self.EthernetFramesRxIn,
        old(self).EthernetFramesRxOut == self.EthernetFramesRxOut,
        old(self).EthernetFramesTxIn == self.EthernetFramesTxIn,
        res == self.EthernetFramesTxIn,
        old(self).EthernetFramesTxOut == self.EthernetFramesTxOut 
    {
      self.api.unverified_get_EthernetFramesTxIn(&Ghost(self.EthernetFramesTxIn))
    }
    pub fn get_EthernetFramesRxIn(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxIn == self.EthernetFramesRxIn,
        res == self.EthernetFramesRxIn,
        old(self).EthernetFramesRxOut == self.EthernetFramesRxOut,
        old(self).EthernetFramesTxIn == self.EthernetFramesTxIn,
        old(self).EthernetFramesTxOut == self.EthernetFramesTxOut 
    {
      self.api.unverified_get_EthernetFramesRxIn(&Ghost(self.EthernetFramesRxIn))
    }
  }

  pub struct Firewall_Firewall_Initialization_Api;
  impl Firewall_Firewall_Api for Firewall_Firewall_Initialization_Api {}
  impl Firewall_Firewall_Put_Api for Firewall_Firewall_Initialization_Api {}

  pub const fn init_api() -> Firewall_Firewall_Application_Api<Firewall_Firewall_Initialization_Api> {
    return Firewall_Firewall_Application_Api {
      api: Firewall_Firewall_Initialization_Api {},

      EthernetFramesTxIn: None,
      EthernetFramesRxOut: None,
      EthernetFramesTxOut: None,
      EthernetFramesRxIn: None
    }
  }

  pub struct Firewall_Firewall_Compute_Api;
  impl Firewall_Firewall_Api for Firewall_Firewall_Compute_Api {}
  impl Firewall_Firewall_Put_Api for Firewall_Firewall_Compute_Api {}
  impl Firewall_Firewall_Get_Api for Firewall_Firewall_Compute_Api {}
  impl Firewall_Firewall_Full_Api for Firewall_Firewall_Compute_Api {}

  pub const fn compute_api() -> Firewall_Firewall_Application_Api<Firewall_Firewall_Compute_Api> {
    return Firewall_Firewall_Application_Api {
      api: Firewall_Firewall_Compute_Api {},

      EthernetFramesTxIn: None,
      EthernetFramesRxOut: None,
      EthernetFramesTxOut: None,
      EthernetFramesRxIn: None
    }
  }
}