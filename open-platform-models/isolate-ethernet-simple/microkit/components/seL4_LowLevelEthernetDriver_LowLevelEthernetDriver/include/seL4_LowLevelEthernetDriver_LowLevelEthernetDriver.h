#pragma once

#include <printf.h>
#include <util.h>
#include <stdint.h>
#include <microkit.h>
#include <sb_types.h>

// Do not edit this file as it will be overwritten if codegen is rerun


bool EthernetFramesTx0_is_empty(void);
bool get_EthernetFramesTx0_poll(sb_event_counter_t *numDropped, SW_SizedEthernetMessage_Impl *data);
bool get_EthernetFramesTx0(SW_SizedEthernetMessage_Impl *data);
bool EthernetFramesTx1_is_empty(void);
bool get_EthernetFramesTx1_poll(sb_event_counter_t *numDropped, SW_SizedEthernetMessage_Impl *data);
bool get_EthernetFramesTx1(SW_SizedEthernetMessage_Impl *data);
bool EthernetFramesTx2_is_empty(void);
bool get_EthernetFramesTx2_poll(sb_event_counter_t *numDropped, SW_SizedEthernetMessage_Impl *data);
bool get_EthernetFramesTx2(SW_SizedEthernetMessage_Impl *data);
bool EthernetFramesTx3_is_empty(void);
bool get_EthernetFramesTx3_poll(sb_event_counter_t *numDropped, SW_SizedEthernetMessage_Impl *data);
bool get_EthernetFramesTx3(SW_SizedEthernetMessage_Impl *data);
bool put_EthernetFramesRx0(const SW_RawEthernetMessage *data);
bool put_EthernetFramesRx1(const SW_RawEthernetMessage *data);
bool put_EthernetFramesRx2(const SW_RawEthernetMessage *data);
bool put_EthernetFramesRx3(const SW_RawEthernetMessage *data);
