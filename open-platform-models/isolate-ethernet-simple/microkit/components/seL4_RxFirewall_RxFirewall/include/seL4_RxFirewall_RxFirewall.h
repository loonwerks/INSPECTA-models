#pragma once

#include <printf.h>
#include <util.h>
#include <stdint.h>
#include <microkit.h>
#include <sb_types.h>

// Do not edit this file as it will be overwritten if codegen is rerun


bool put_EthernetFramesRxOut0(const SW_RawEthernetMessage *data);
bool put_EthernetFramesRxOut1(const SW_RawEthernetMessage *data);
bool put_EthernetFramesRxOut2(const SW_RawEthernetMessage *data);
bool put_EthernetFramesRxOut3(const SW_RawEthernetMessage *data);
bool EthernetFramesRxIn0_is_empty(void);
bool get_EthernetFramesRxIn0_poll(sb_event_counter_t *numDropped, SW_RawEthernetMessage *data);
bool get_EthernetFramesRxIn0(SW_RawEthernetMessage *data);
bool EthernetFramesRxIn1_is_empty(void);
bool get_EthernetFramesRxIn1_poll(sb_event_counter_t *numDropped, SW_RawEthernetMessage *data);
bool get_EthernetFramesRxIn1(SW_RawEthernetMessage *data);
bool EthernetFramesRxIn2_is_empty(void);
bool get_EthernetFramesRxIn2_poll(sb_event_counter_t *numDropped, SW_RawEthernetMessage *data);
bool get_EthernetFramesRxIn2(SW_RawEthernetMessage *data);
bool EthernetFramesRxIn3_is_empty(void);
bool get_EthernetFramesRxIn3_poll(sb_event_counter_t *numDropped, SW_RawEthernetMessage *data);
bool get_EthernetFramesRxIn3(SW_RawEthernetMessage *data);
