// Do not edit this file as it will be overwritten if codegen is rerun

use vstd::prelude::*;
use crate::data::*;
use super::extern_c_api as extern_api;

verus! {
  pub trait seL4_TxFirewall_TxFirewall_Api {}

  pub trait seL4_TxFirewall_TxFirewall_Put_Api: seL4_TxFirewall_TxFirewall_Api {
    #[verifier::external_body]
    fn unverified_put_EthernetFramesTxOut0(
      &mut self,
      value: SW::SizedEthernetMessage_Impl) 
    {
      extern_api::unsafe_put_EthernetFramesTxOut0(&value);
    }

    #[verifier::external_body]
    fn unverified_put_EthernetFramesTxOut1(
      &mut self,
      value: SW::SizedEthernetMessage_Impl) 
    {
      extern_api::unsafe_put_EthernetFramesTxOut1(&value);
    }

    #[verifier::external_body]
    fn unverified_put_EthernetFramesTxOut2(
      &mut self,
      value: SW::SizedEthernetMessage_Impl) 
    {
      extern_api::unsafe_put_EthernetFramesTxOut2(&value);
    }

    #[verifier::external_body]
    fn unverified_put_EthernetFramesTxOut3(
      &mut self,
      value: SW::SizedEthernetMessage_Impl) 
    {
      extern_api::unsafe_put_EthernetFramesTxOut3(&value);
    }
  }

  pub trait seL4_TxFirewall_TxFirewall_Get_Api: seL4_TxFirewall_TxFirewall_Api {
    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxIn0(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxIn0();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxIn1(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxIn1();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxIn2(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxIn2();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxIn3(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxIn3();
    }
  }

  pub trait seL4_TxFirewall_TxFirewall_Full_Api: seL4_TxFirewall_TxFirewall_Put_Api + seL4_TxFirewall_TxFirewall_Get_Api {}

  pub struct seL4_TxFirewall_TxFirewall_Application_Api<API: seL4_TxFirewall_TxFirewall_Api> {
    pub api: API,

    pub ghost EthernetFramesTxIn0: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesTxIn1: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesTxIn2: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesTxIn3: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesTxOut0: Option<SW::SizedEthernetMessage_Impl>,
    pub ghost EthernetFramesTxOut1: Option<SW::SizedEthernetMessage_Impl>,
    pub ghost EthernetFramesTxOut2: Option<SW::SizedEthernetMessage_Impl>,
    pub ghost EthernetFramesTxOut3: Option<SW::SizedEthernetMessage_Impl>
  }

  impl<API: seL4_TxFirewall_TxFirewall_Put_Api> seL4_TxFirewall_TxFirewall_Application_Api<API> {
    pub fn put_EthernetFramesTxOut0(
      &mut self,
      value: SW::SizedEthernetMessage_Impl)
      ensures
        old(self).EthernetFramesTxIn0 == self.EthernetFramesTxIn0,
        old(self).EthernetFramesTxIn1 == self.EthernetFramesTxIn1,
        old(self).EthernetFramesTxIn2 == self.EthernetFramesTxIn2,
        old(self).EthernetFramesTxIn3 == self.EthernetFramesTxIn3,
        self.EthernetFramesTxOut0 == Some(value),
        old(self).EthernetFramesTxOut1 == self.EthernetFramesTxOut1,
        old(self).EthernetFramesTxOut2 == self.EthernetFramesTxOut2,
        old(self).EthernetFramesTxOut3 == self.EthernetFramesTxOut3 
    {
      self.api.unverified_put_EthernetFramesTxOut0(value);
      self.EthernetFramesTxOut0 = Some(value);
    }
    pub fn put_EthernetFramesTxOut1(
      &mut self,
      value: SW::SizedEthernetMessage_Impl)
      ensures
        old(self).EthernetFramesTxIn0 == self.EthernetFramesTxIn0,
        old(self).EthernetFramesTxIn1 == self.EthernetFramesTxIn1,
        old(self).EthernetFramesTxIn2 == self.EthernetFramesTxIn2,
        old(self).EthernetFramesTxIn3 == self.EthernetFramesTxIn3,
        old(self).EthernetFramesTxOut0 == self.EthernetFramesTxOut0,
        self.EthernetFramesTxOut1 == Some(value),
        old(self).EthernetFramesTxOut2 == self.EthernetFramesTxOut2,
        old(self).EthernetFramesTxOut3 == self.EthernetFramesTxOut3 
    {
      self.api.unverified_put_EthernetFramesTxOut1(value);
      self.EthernetFramesTxOut1 = Some(value);
    }
    pub fn put_EthernetFramesTxOut2(
      &mut self,
      value: SW::SizedEthernetMessage_Impl)
      ensures
        old(self).EthernetFramesTxIn0 == self.EthernetFramesTxIn0,
        old(self).EthernetFramesTxIn1 == self.EthernetFramesTxIn1,
        old(self).EthernetFramesTxIn2 == self.EthernetFramesTxIn2,
        old(self).EthernetFramesTxIn3 == self.EthernetFramesTxIn3,
        old(self).EthernetFramesTxOut0 == self.EthernetFramesTxOut0,
        old(self).EthernetFramesTxOut1 == self.EthernetFramesTxOut1,
        self.EthernetFramesTxOut2 == Some(value),
        old(self).EthernetFramesTxOut3 == self.EthernetFramesTxOut3 
    {
      self.api.unverified_put_EthernetFramesTxOut2(value);
      self.EthernetFramesTxOut2 = Some(value);
    }
    pub fn put_EthernetFramesTxOut3(
      &mut self,
      value: SW::SizedEthernetMessage_Impl)
      ensures
        old(self).EthernetFramesTxIn0 == self.EthernetFramesTxIn0,
        old(self).EthernetFramesTxIn1 == self.EthernetFramesTxIn1,
        old(self).EthernetFramesTxIn2 == self.EthernetFramesTxIn2,
        old(self).EthernetFramesTxIn3 == self.EthernetFramesTxIn3,
        old(self).EthernetFramesTxOut0 == self.EthernetFramesTxOut0,
        old(self).EthernetFramesTxOut1 == self.EthernetFramesTxOut1,
        old(self).EthernetFramesTxOut2 == self.EthernetFramesTxOut2,
        self.EthernetFramesTxOut3 == Some(value) 
    {
      self.api.unverified_put_EthernetFramesTxOut3(value);
      self.EthernetFramesTxOut3 = Some(value);
    }
  }

  impl<API: seL4_TxFirewall_TxFirewall_Get_Api> seL4_TxFirewall_TxFirewall_Application_Api<API> {
    pub fn get_EthernetFramesTxIn0(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesTxIn0 == self.EthernetFramesTxIn0,
        res == self.EthernetFramesTxIn0,
        old(self).EthernetFramesTxIn1 == self.EthernetFramesTxIn1,
        old(self).EthernetFramesTxIn2 == self.EthernetFramesTxIn2,
        old(self).EthernetFramesTxIn3 == self.EthernetFramesTxIn3,
        old(self).EthernetFramesTxOut0 == self.EthernetFramesTxOut0,
        old(self).EthernetFramesTxOut1 == self.EthernetFramesTxOut1,
        old(self).EthernetFramesTxOut2 == self.EthernetFramesTxOut2,
        old(self).EthernetFramesTxOut3 == self.EthernetFramesTxOut3 
    {
      self.api.unverified_get_EthernetFramesTxIn0(&Ghost(self.EthernetFramesTxIn0))
    }
    pub fn get_EthernetFramesTxIn1(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesTxIn0 == self.EthernetFramesTxIn0,
        old(self).EthernetFramesTxIn1 == self.EthernetFramesTxIn1,
        res == self.EthernetFramesTxIn1,
        old(self).EthernetFramesTxIn2 == self.EthernetFramesTxIn2,
        old(self).EthernetFramesTxIn3 == self.EthernetFramesTxIn3,
        old(self).EthernetFramesTxOut0 == self.EthernetFramesTxOut0,
        old(self).EthernetFramesTxOut1 == self.EthernetFramesTxOut1,
        old(self).EthernetFramesTxOut2 == self.EthernetFramesTxOut2,
        old(self).EthernetFramesTxOut3 == self.EthernetFramesTxOut3 
    {
      self.api.unverified_get_EthernetFramesTxIn1(&Ghost(self.EthernetFramesTxIn1))
    }
    pub fn get_EthernetFramesTxIn2(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesTxIn0 == self.EthernetFramesTxIn0,
        old(self).EthernetFramesTxIn1 == self.EthernetFramesTxIn1,
        old(self).EthernetFramesTxIn2 == self.EthernetFramesTxIn2,
        res == self.EthernetFramesTxIn2,
        old(self).EthernetFramesTxIn3 == self.EthernetFramesTxIn3,
        old(self).EthernetFramesTxOut0 == self.EthernetFramesTxOut0,
        old(self).EthernetFramesTxOut1 == self.EthernetFramesTxOut1,
        old(self).EthernetFramesTxOut2 == self.EthernetFramesTxOut2,
        old(self).EthernetFramesTxOut3 == self.EthernetFramesTxOut3 
    {
      self.api.unverified_get_EthernetFramesTxIn2(&Ghost(self.EthernetFramesTxIn2))
    }
    pub fn get_EthernetFramesTxIn3(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesTxIn0 == self.EthernetFramesTxIn0,
        old(self).EthernetFramesTxIn1 == self.EthernetFramesTxIn1,
        old(self).EthernetFramesTxIn2 == self.EthernetFramesTxIn2,
        old(self).EthernetFramesTxIn3 == self.EthernetFramesTxIn3,
        res == self.EthernetFramesTxIn3,
        old(self).EthernetFramesTxOut0 == self.EthernetFramesTxOut0,
        old(self).EthernetFramesTxOut1 == self.EthernetFramesTxOut1,
        old(self).EthernetFramesTxOut2 == self.EthernetFramesTxOut2,
        old(self).EthernetFramesTxOut3 == self.EthernetFramesTxOut3 
    {
      self.api.unverified_get_EthernetFramesTxIn3(&Ghost(self.EthernetFramesTxIn3))
    }
  }

  pub struct seL4_TxFirewall_TxFirewall_Initialization_Api;
  impl seL4_TxFirewall_TxFirewall_Api for seL4_TxFirewall_TxFirewall_Initialization_Api {}
  impl seL4_TxFirewall_TxFirewall_Put_Api for seL4_TxFirewall_TxFirewall_Initialization_Api {}

  pub const fn init_api() -> seL4_TxFirewall_TxFirewall_Application_Api<seL4_TxFirewall_TxFirewall_Initialization_Api> {
    return seL4_TxFirewall_TxFirewall_Application_Api {
      api: seL4_TxFirewall_TxFirewall_Initialization_Api {},

      EthernetFramesTxIn0: None,
      EthernetFramesTxIn1: None,
      EthernetFramesTxIn2: None,
      EthernetFramesTxIn3: None,
      EthernetFramesTxOut0: None,
      EthernetFramesTxOut1: None,
      EthernetFramesTxOut2: None,
      EthernetFramesTxOut3: None
    }
  }

  pub struct seL4_TxFirewall_TxFirewall_Compute_Api;
  impl seL4_TxFirewall_TxFirewall_Api for seL4_TxFirewall_TxFirewall_Compute_Api {}
  impl seL4_TxFirewall_TxFirewall_Put_Api for seL4_TxFirewall_TxFirewall_Compute_Api {}
  impl seL4_TxFirewall_TxFirewall_Get_Api for seL4_TxFirewall_TxFirewall_Compute_Api {}
  impl seL4_TxFirewall_TxFirewall_Full_Api for seL4_TxFirewall_TxFirewall_Compute_Api {}

  pub const fn compute_api() -> seL4_TxFirewall_TxFirewall_Application_Api<seL4_TxFirewall_TxFirewall_Compute_Api> {
    return seL4_TxFirewall_TxFirewall_Application_Api {
      api: seL4_TxFirewall_TxFirewall_Compute_Api {},

      EthernetFramesTxIn0: None,
      EthernetFramesTxIn1: None,
      EthernetFramesTxIn2: None,
      EthernetFramesTxIn3: None,
      EthernetFramesTxOut0: None,
      EthernetFramesTxOut1: None,
      EthernetFramesTxOut2: None,
      EthernetFramesTxOut3: None
    }
  }
}