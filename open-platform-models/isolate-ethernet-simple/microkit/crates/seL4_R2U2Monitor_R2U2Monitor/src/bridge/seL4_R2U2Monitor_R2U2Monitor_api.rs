// Do not edit this file as it will be overwritten if codegen is rerun

use vstd::prelude::*;
use data::*;
use super::extern_c_api as extern_api;

verus! {
  pub trait seL4_R2U2Monitor_R2U2Monitor_Api {}

  pub trait seL4_R2U2Monitor_R2U2Monitor_Put_Api: seL4_R2U2Monitor_R2U2Monitor_Api {
  }

  pub trait seL4_R2U2Monitor_R2U2Monitor_Get_Api: seL4_R2U2Monitor_R2U2Monitor_Api {
    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxArduPilot0(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxArduPilot0();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxArduPilot1(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxArduPilot1();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxArduPilot2(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxArduPilot2();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxArduPilot3(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxArduPilot3();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxArduPilot0(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxArduPilot0();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxArduPilot1(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxArduPilot1();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxArduPilot2(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxArduPilot2();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxArduPilot3(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxArduPilot3();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxDriver0(
      &mut self,
      value: &Ghost<Option<SW::SizedEthernetMessage_Impl>>) -> (res : Option<SW::SizedEthernetMessage_Impl>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxDriver0();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxDriver1(
      &mut self,
      value: &Ghost<Option<SW::SizedEthernetMessage_Impl>>) -> (res : Option<SW::SizedEthernetMessage_Impl>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxDriver1();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxDriver2(
      &mut self,
      value: &Ghost<Option<SW::SizedEthernetMessage_Impl>>) -> (res : Option<SW::SizedEthernetMessage_Impl>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxDriver2();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesTxDriver3(
      &mut self,
      value: &Ghost<Option<SW::SizedEthernetMessage_Impl>>) -> (res : Option<SW::SizedEthernetMessage_Impl>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesTxDriver3();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxDriver0(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxDriver0();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxDriver1(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxDriver1();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxDriver2(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxDriver2();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxDriver3(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxDriver3();
    }
  }

  pub trait seL4_R2U2Monitor_R2U2Monitor_Full_Api: seL4_R2U2Monitor_R2U2Monitor_Put_Api + seL4_R2U2Monitor_R2U2Monitor_Get_Api {}

  pub struct seL4_R2U2Monitor_R2U2Monitor_Application_Api<API: seL4_R2U2Monitor_R2U2Monitor_Api> {
    pub api: API,

    pub ghost EthernetFramesTxArduPilot0: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesTxArduPilot1: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesTxArduPilot2: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesTxArduPilot3: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxArduPilot0: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxArduPilot1: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxArduPilot2: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxArduPilot3: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesTxDriver0: Option<SW::SizedEthernetMessage_Impl>,
    pub ghost EthernetFramesTxDriver1: Option<SW::SizedEthernetMessage_Impl>,
    pub ghost EthernetFramesTxDriver2: Option<SW::SizedEthernetMessage_Impl>,
    pub ghost EthernetFramesTxDriver3: Option<SW::SizedEthernetMessage_Impl>,
    pub ghost EthernetFramesRxDriver0: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxDriver1: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxDriver2: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxDriver3: Option<SW::RawEthernetMessage>
  }

  impl<API: seL4_R2U2Monitor_R2U2Monitor_Put_Api> seL4_R2U2Monitor_R2U2Monitor_Application_Api<API> {
  }

  impl<API: seL4_R2U2Monitor_R2U2Monitor_Get_Api> seL4_R2U2Monitor_R2U2Monitor_Application_Api<API> {
    pub fn get_EthernetFramesTxArduPilot0(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        res == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesTxArduPilot0(&Ghost(self.EthernetFramesTxArduPilot0))
    }
    pub fn get_EthernetFramesTxArduPilot1(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        res == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesTxArduPilot1(&Ghost(self.EthernetFramesTxArduPilot1))
    }
    pub fn get_EthernetFramesTxArduPilot2(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        res == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesTxArduPilot2(&Ghost(self.EthernetFramesTxArduPilot2))
    }
    pub fn get_EthernetFramesTxArduPilot3(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3,
        res == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesTxArduPilot3(&Ghost(self.EthernetFramesTxArduPilot3))
    }
    pub fn get_EthernetFramesRxArduPilot0(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        res == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesRxArduPilot0(&Ghost(self.EthernetFramesRxArduPilot0))
    }
    pub fn get_EthernetFramesRxArduPilot1(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        res == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesRxArduPilot1(&Ghost(self.EthernetFramesRxArduPilot1))
    }
    pub fn get_EthernetFramesRxArduPilot2(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        res == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesRxArduPilot2(&Ghost(self.EthernetFramesRxArduPilot2))
    }
    pub fn get_EthernetFramesRxArduPilot3(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        res == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesRxArduPilot3(&Ghost(self.EthernetFramesRxArduPilot3))
    }
    pub fn get_EthernetFramesTxDriver0(&mut self) -> (res : Option<SW::SizedEthernetMessage_Impl>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        res == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesTxDriver0(&Ghost(self.EthernetFramesTxDriver0))
    }
    pub fn get_EthernetFramesTxDriver1(&mut self) -> (res : Option<SW::SizedEthernetMessage_Impl>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        res == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesTxDriver1(&Ghost(self.EthernetFramesTxDriver1))
    }
    pub fn get_EthernetFramesTxDriver2(&mut self) -> (res : Option<SW::SizedEthernetMessage_Impl>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        res == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesTxDriver2(&Ghost(self.EthernetFramesTxDriver2))
    }
    pub fn get_EthernetFramesTxDriver3(&mut self) -> (res : Option<SW::SizedEthernetMessage_Impl>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        res == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesTxDriver3(&Ghost(self.EthernetFramesTxDriver3))
    }
    pub fn get_EthernetFramesRxDriver0(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        res == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesRxDriver0(&Ghost(self.EthernetFramesRxDriver0))
    }
    pub fn get_EthernetFramesRxDriver1(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        res == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesRxDriver1(&Ghost(self.EthernetFramesRxDriver1))
    }
    pub fn get_EthernetFramesRxDriver2(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        res == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesRxDriver2(&Ghost(self.EthernetFramesRxDriver2))
    }
    pub fn get_EthernetFramesRxDriver3(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxDriver0 == self.EthernetFramesRxDriver0,
        old(self).EthernetFramesRxDriver1 == self.EthernetFramesRxDriver1,
        old(self).EthernetFramesRxDriver2 == self.EthernetFramesRxDriver2,
        old(self).EthernetFramesRxDriver3 == self.EthernetFramesRxDriver3,
        res == self.EthernetFramesRxDriver3,
        old(self).EthernetFramesTxDriver0 == self.EthernetFramesTxDriver0,
        old(self).EthernetFramesTxDriver1 == self.EthernetFramesTxDriver1,
        old(self).EthernetFramesTxDriver2 == self.EthernetFramesTxDriver2,
        old(self).EthernetFramesTxDriver3 == self.EthernetFramesTxDriver3,
        old(self).EthernetFramesRxArduPilot0 == self.EthernetFramesRxArduPilot0,
        old(self).EthernetFramesRxArduPilot1 == self.EthernetFramesRxArduPilot1,
        old(self).EthernetFramesRxArduPilot2 == self.EthernetFramesRxArduPilot2,
        old(self).EthernetFramesRxArduPilot3 == self.EthernetFramesRxArduPilot3,
        old(self).EthernetFramesTxArduPilot0 == self.EthernetFramesTxArduPilot0,
        old(self).EthernetFramesTxArduPilot1 == self.EthernetFramesTxArduPilot1,
        old(self).EthernetFramesTxArduPilot2 == self.EthernetFramesTxArduPilot2,
        old(self).EthernetFramesTxArduPilot3 == self.EthernetFramesTxArduPilot3 
    {
      self.api.unverified_get_EthernetFramesRxDriver3(&Ghost(self.EthernetFramesRxDriver3))
    }
  }

  pub struct seL4_R2U2Monitor_R2U2Monitor_Initialization_Api;
  impl seL4_R2U2Monitor_R2U2Monitor_Api for seL4_R2U2Monitor_R2U2Monitor_Initialization_Api {}
  impl seL4_R2U2Monitor_R2U2Monitor_Put_Api for seL4_R2U2Monitor_R2U2Monitor_Initialization_Api {}

  pub const fn init_api() -> seL4_R2U2Monitor_R2U2Monitor_Application_Api<seL4_R2U2Monitor_R2U2Monitor_Initialization_Api> {
    return seL4_R2U2Monitor_R2U2Monitor_Application_Api {
      api: seL4_R2U2Monitor_R2U2Monitor_Initialization_Api {},

      EthernetFramesTxArduPilot0: None,
      EthernetFramesTxArduPilot1: None,
      EthernetFramesTxArduPilot2: None,
      EthernetFramesTxArduPilot3: None,
      EthernetFramesRxArduPilot0: None,
      EthernetFramesRxArduPilot1: None,
      EthernetFramesRxArduPilot2: None,
      EthernetFramesRxArduPilot3: None,
      EthernetFramesTxDriver0: None,
      EthernetFramesTxDriver1: None,
      EthernetFramesTxDriver2: None,
      EthernetFramesTxDriver3: None,
      EthernetFramesRxDriver0: None,
      EthernetFramesRxDriver1: None,
      EthernetFramesRxDriver2: None,
      EthernetFramesRxDriver3: None
    }
  }

  pub struct seL4_R2U2Monitor_R2U2Monitor_Compute_Api;
  impl seL4_R2U2Monitor_R2U2Monitor_Api for seL4_R2U2Monitor_R2U2Monitor_Compute_Api {}
  impl seL4_R2U2Monitor_R2U2Monitor_Put_Api for seL4_R2U2Monitor_R2U2Monitor_Compute_Api {}
  impl seL4_R2U2Monitor_R2U2Monitor_Get_Api for seL4_R2U2Monitor_R2U2Monitor_Compute_Api {}
  impl seL4_R2U2Monitor_R2U2Monitor_Full_Api for seL4_R2U2Monitor_R2U2Monitor_Compute_Api {}

  pub const fn compute_api() -> seL4_R2U2Monitor_R2U2Monitor_Application_Api<seL4_R2U2Monitor_R2U2Monitor_Compute_Api> {
    return seL4_R2U2Monitor_R2U2Monitor_Application_Api {
      api: seL4_R2U2Monitor_R2U2Monitor_Compute_Api {},

      EthernetFramesTxArduPilot0: None,
      EthernetFramesTxArduPilot1: None,
      EthernetFramesTxArduPilot2: None,
      EthernetFramesTxArduPilot3: None,
      EthernetFramesRxArduPilot0: None,
      EthernetFramesRxArduPilot1: None,
      EthernetFramesRxArduPilot2: None,
      EthernetFramesRxArduPilot3: None,
      EthernetFramesTxDriver0: None,
      EthernetFramesTxDriver1: None,
      EthernetFramesTxDriver2: None,
      EthernetFramesTxDriver3: None,
      EthernetFramesRxDriver0: None,
      EthernetFramesRxDriver1: None,
      EthernetFramesRxDriver2: None,
      EthernetFramesRxDriver3: None
    }
  }
}