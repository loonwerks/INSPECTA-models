// Do not edit this file as it will be overwritten if codegen is rerun

use vstd::prelude::*;
use data::*;
use super::extern_c_api as extern_api;

verus! {
  pub trait seL4_RxFirewall_RxFirewall_Api {}

  pub trait seL4_RxFirewall_RxFirewall_Put_Api: seL4_RxFirewall_RxFirewall_Api {
    #[verifier::external_body]
    fn unverified_put_EthernetFramesRxOut0(
      &mut self,
      value: SW::RawEthernetMessage) 
    {
      extern_api::unsafe_put_EthernetFramesRxOut0(&value);
    }

    #[verifier::external_body]
    fn unverified_put_EthernetFramesRxOut1(
      &mut self,
      value: SW::RawEthernetMessage) 
    {
      extern_api::unsafe_put_EthernetFramesRxOut1(&value);
    }

    #[verifier::external_body]
    fn unverified_put_EthernetFramesRxOut2(
      &mut self,
      value: SW::RawEthernetMessage) 
    {
      extern_api::unsafe_put_EthernetFramesRxOut2(&value);
    }

    #[verifier::external_body]
    fn unverified_put_EthernetFramesRxOut3(
      &mut self,
      value: SW::RawEthernetMessage) 
    {
      extern_api::unsafe_put_EthernetFramesRxOut3(&value);
    }
  }

  pub trait seL4_RxFirewall_RxFirewall_Get_Api: seL4_RxFirewall_RxFirewall_Api {
    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxIn0(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxIn0();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxIn1(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxIn1();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxIn2(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxIn2();
    }

    #[verifier::external_body]
    fn unverified_get_EthernetFramesRxIn3(
      &mut self,
      value: &Ghost<Option<SW::RawEthernetMessage>>) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        res == value@ 
    {
      return extern_api::unsafe_get_EthernetFramesRxIn3();
    }
  }

  pub trait seL4_RxFirewall_RxFirewall_Full_Api: seL4_RxFirewall_RxFirewall_Put_Api + seL4_RxFirewall_RxFirewall_Get_Api {}

  pub struct seL4_RxFirewall_RxFirewall_Application_Api<API: seL4_RxFirewall_RxFirewall_Api> {
    pub api: API,

    pub ghost EthernetFramesRxOut0: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxOut1: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxOut2: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxOut3: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxIn0: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxIn1: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxIn2: Option<SW::RawEthernetMessage>,
    pub ghost EthernetFramesRxIn3: Option<SW::RawEthernetMessage>
  }

  impl<API: seL4_RxFirewall_RxFirewall_Put_Api> seL4_RxFirewall_RxFirewall_Application_Api<API> {
    pub fn put_EthernetFramesRxOut0(
      &mut self,
      value: SW::RawEthernetMessage)
      ensures
        old(self).EthernetFramesRxIn0 == self.EthernetFramesRxIn0,
        old(self).EthernetFramesRxIn1 == self.EthernetFramesRxIn1,
        old(self).EthernetFramesRxIn2 == self.EthernetFramesRxIn2,
        old(self).EthernetFramesRxIn3 == self.EthernetFramesRxIn3,
        self.EthernetFramesRxOut0 == Some(value),
        old(self).EthernetFramesRxOut1 == self.EthernetFramesRxOut1,
        old(self).EthernetFramesRxOut2 == self.EthernetFramesRxOut2,
        old(self).EthernetFramesRxOut3 == self.EthernetFramesRxOut3 
    {
      self.api.unverified_put_EthernetFramesRxOut0(value);
      self.EthernetFramesRxOut0 = Some(value);
    }
    pub fn put_EthernetFramesRxOut1(
      &mut self,
      value: SW::RawEthernetMessage)
      ensures
        old(self).EthernetFramesRxIn0 == self.EthernetFramesRxIn0,
        old(self).EthernetFramesRxIn1 == self.EthernetFramesRxIn1,
        old(self).EthernetFramesRxIn2 == self.EthernetFramesRxIn2,
        old(self).EthernetFramesRxIn3 == self.EthernetFramesRxIn3,
        old(self).EthernetFramesRxOut0 == self.EthernetFramesRxOut0,
        self.EthernetFramesRxOut1 == Some(value),
        old(self).EthernetFramesRxOut2 == self.EthernetFramesRxOut2,
        old(self).EthernetFramesRxOut3 == self.EthernetFramesRxOut3 
    {
      self.api.unverified_put_EthernetFramesRxOut1(value);
      self.EthernetFramesRxOut1 = Some(value);
    }
    pub fn put_EthernetFramesRxOut2(
      &mut self,
      value: SW::RawEthernetMessage)
      ensures
        old(self).EthernetFramesRxIn0 == self.EthernetFramesRxIn0,
        old(self).EthernetFramesRxIn1 == self.EthernetFramesRxIn1,
        old(self).EthernetFramesRxIn2 == self.EthernetFramesRxIn2,
        old(self).EthernetFramesRxIn3 == self.EthernetFramesRxIn3,
        old(self).EthernetFramesRxOut0 == self.EthernetFramesRxOut0,
        old(self).EthernetFramesRxOut1 == self.EthernetFramesRxOut1,
        self.EthernetFramesRxOut2 == Some(value),
        old(self).EthernetFramesRxOut3 == self.EthernetFramesRxOut3 
    {
      self.api.unverified_put_EthernetFramesRxOut2(value);
      self.EthernetFramesRxOut2 = Some(value);
    }
    pub fn put_EthernetFramesRxOut3(
      &mut self,
      value: SW::RawEthernetMessage)
      ensures
        old(self).EthernetFramesRxIn0 == self.EthernetFramesRxIn0,
        old(self).EthernetFramesRxIn1 == self.EthernetFramesRxIn1,
        old(self).EthernetFramesRxIn2 == self.EthernetFramesRxIn2,
        old(self).EthernetFramesRxIn3 == self.EthernetFramesRxIn3,
        old(self).EthernetFramesRxOut0 == self.EthernetFramesRxOut0,
        old(self).EthernetFramesRxOut1 == self.EthernetFramesRxOut1,
        old(self).EthernetFramesRxOut2 == self.EthernetFramesRxOut2,
        self.EthernetFramesRxOut3 == Some(value) 
    {
      self.api.unverified_put_EthernetFramesRxOut3(value);
      self.EthernetFramesRxOut3 = Some(value);
    }
  }

  impl<API: seL4_RxFirewall_RxFirewall_Get_Api> seL4_RxFirewall_RxFirewall_Application_Api<API> {
    pub fn get_EthernetFramesRxIn0(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxIn0 == self.EthernetFramesRxIn0,
        res == self.EthernetFramesRxIn0,
        old(self).EthernetFramesRxIn1 == self.EthernetFramesRxIn1,
        old(self).EthernetFramesRxIn2 == self.EthernetFramesRxIn2,
        old(self).EthernetFramesRxIn3 == self.EthernetFramesRxIn3,
        old(self).EthernetFramesRxOut0 == self.EthernetFramesRxOut0,
        old(self).EthernetFramesRxOut1 == self.EthernetFramesRxOut1,
        old(self).EthernetFramesRxOut2 == self.EthernetFramesRxOut2,
        old(self).EthernetFramesRxOut3 == self.EthernetFramesRxOut3 
    {
      self.api.unverified_get_EthernetFramesRxIn0(&Ghost(self.EthernetFramesRxIn0))
    }
    pub fn get_EthernetFramesRxIn1(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxIn0 == self.EthernetFramesRxIn0,
        old(self).EthernetFramesRxIn1 == self.EthernetFramesRxIn1,
        res == self.EthernetFramesRxIn1,
        old(self).EthernetFramesRxIn2 == self.EthernetFramesRxIn2,
        old(self).EthernetFramesRxIn3 == self.EthernetFramesRxIn3,
        old(self).EthernetFramesRxOut0 == self.EthernetFramesRxOut0,
        old(self).EthernetFramesRxOut1 == self.EthernetFramesRxOut1,
        old(self).EthernetFramesRxOut2 == self.EthernetFramesRxOut2,
        old(self).EthernetFramesRxOut3 == self.EthernetFramesRxOut3 
    {
      self.api.unverified_get_EthernetFramesRxIn1(&Ghost(self.EthernetFramesRxIn1))
    }
    pub fn get_EthernetFramesRxIn2(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxIn0 == self.EthernetFramesRxIn0,
        old(self).EthernetFramesRxIn1 == self.EthernetFramesRxIn1,
        old(self).EthernetFramesRxIn2 == self.EthernetFramesRxIn2,
        res == self.EthernetFramesRxIn2,
        old(self).EthernetFramesRxIn3 == self.EthernetFramesRxIn3,
        old(self).EthernetFramesRxOut0 == self.EthernetFramesRxOut0,
        old(self).EthernetFramesRxOut1 == self.EthernetFramesRxOut1,
        old(self).EthernetFramesRxOut2 == self.EthernetFramesRxOut2,
        old(self).EthernetFramesRxOut3 == self.EthernetFramesRxOut3 
    {
      self.api.unverified_get_EthernetFramesRxIn2(&Ghost(self.EthernetFramesRxIn2))
    }
    pub fn get_EthernetFramesRxIn3(&mut self) -> (res : Option<SW::RawEthernetMessage>)
      ensures
        old(self).EthernetFramesRxIn0 == self.EthernetFramesRxIn0,
        old(self).EthernetFramesRxIn1 == self.EthernetFramesRxIn1,
        old(self).EthernetFramesRxIn2 == self.EthernetFramesRxIn2,
        old(self).EthernetFramesRxIn3 == self.EthernetFramesRxIn3,
        res == self.EthernetFramesRxIn3,
        old(self).EthernetFramesRxOut0 == self.EthernetFramesRxOut0,
        old(self).EthernetFramesRxOut1 == self.EthernetFramesRxOut1,
        old(self).EthernetFramesRxOut2 == self.EthernetFramesRxOut2,
        old(self).EthernetFramesRxOut3 == self.EthernetFramesRxOut3 
    {
      self.api.unverified_get_EthernetFramesRxIn3(&Ghost(self.EthernetFramesRxIn3))
    }
  }

  pub struct seL4_RxFirewall_RxFirewall_Initialization_Api;
  impl seL4_RxFirewall_RxFirewall_Api for seL4_RxFirewall_RxFirewall_Initialization_Api {}
  impl seL4_RxFirewall_RxFirewall_Put_Api for seL4_RxFirewall_RxFirewall_Initialization_Api {}

  pub const fn init_api() -> seL4_RxFirewall_RxFirewall_Application_Api<seL4_RxFirewall_RxFirewall_Initialization_Api> {
    return seL4_RxFirewall_RxFirewall_Application_Api {
      api: seL4_RxFirewall_RxFirewall_Initialization_Api {},

      EthernetFramesRxOut0: None,
      EthernetFramesRxOut1: None,
      EthernetFramesRxOut2: None,
      EthernetFramesRxOut3: None,
      EthernetFramesRxIn0: None,
      EthernetFramesRxIn1: None,
      EthernetFramesRxIn2: None,
      EthernetFramesRxIn3: None
    }
  }

  pub struct seL4_RxFirewall_RxFirewall_Compute_Api;
  impl seL4_RxFirewall_RxFirewall_Api for seL4_RxFirewall_RxFirewall_Compute_Api {}
  impl seL4_RxFirewall_RxFirewall_Put_Api for seL4_RxFirewall_RxFirewall_Compute_Api {}
  impl seL4_RxFirewall_RxFirewall_Get_Api for seL4_RxFirewall_RxFirewall_Compute_Api {}
  impl seL4_RxFirewall_RxFirewall_Full_Api for seL4_RxFirewall_RxFirewall_Compute_Api {}

  pub const fn compute_api() -> seL4_RxFirewall_RxFirewall_Application_Api<seL4_RxFirewall_RxFirewall_Compute_Api> {
    return seL4_RxFirewall_RxFirewall_Application_Api {
      api: seL4_RxFirewall_RxFirewall_Compute_Api {},

      EthernetFramesRxOut0: None,
      EthernetFramesRxOut1: None,
      EthernetFramesRxOut2: None,
      EthernetFramesRxOut3: None,
      EthernetFramesRxIn0: None,
      EthernetFramesRxIn1: None,
      EthernetFramesRxIn2: None,
      EthernetFramesRxIn3: None
    }
  }
}