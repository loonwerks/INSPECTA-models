// #Sireum

package base.SW

import org.sireum._
import base._

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

object StructuredEthernetMessage_i {
  def example(): SW.StructuredEthernetMessage_i = {
    return SW.StructuredEthernetMessage_i(
      malformedFrame = Base_Types.Boolean_example(),
      internetProtocol = SW.InternetProtocol.IPV4,
      frameProtocol = SW.FrameProtocol.TCP,
      portIsWhitelisted = Base_Types.Boolean_example(),
      arpType = SW.ARP_Type.REQUEST,
      rawMessage = SW.RawEthernetMessage.example())
  }

  /** invariant relateFrameProtocolToArpType
    */
  @strictpure def relateFrameProtocolToArpType_Invariant(value: SW.StructuredEthernetMessage_i): B =
    value.frameProtocol == SW.FrameProtocol.TCP &
      value.arpType == SW.ARP_Type.NA |
      value.frameProtocol == SW.FrameProtocol.ARP &
        (value.arpType == SW.ARP_Type.REQUEST |
          value.arpType == SW.ARP_Type.REPLY)

  /** D-Inv Data Invariant for SW.StructuredEthernetMessage_i
    */
  @strictpure def D_Inv_StructuredEthernetMessage_i(value: SW.StructuredEthernetMessage_i): B =
    (relateFrameProtocolToArpType_Invariant(value))

  /** D-Inv-Guard Data Invariant for SW.StructuredEthernetMessage_i
    */
  @strictpure def D_Inv_Guard_StructuredEthernetMessage_i(value: Option[SW.StructuredEthernetMessage_i]): B =
    value.nonEmpty ___>: D_Inv_StructuredEthernetMessage_i(value.get)
}

@datatype class StructuredEthernetMessage_i(
  val malformedFrame: B,
  val internetProtocol: SW.InternetProtocol.Type,
  val frameProtocol: SW.FrameProtocol.Type,
  val portIsWhitelisted: B,
  val arpType: SW.ARP_Type.Type,
  val rawMessage: SW.RawEthernetMessage) {
  @spec def relateFrameProtocolToArpType = Invariant(
    frameProtocol == SW.FrameProtocol.TCP &
      arpType == SW.ARP_Type.NA |
      frameProtocol == SW.FrameProtocol.ARP &
        (arpType == SW.ARP_Type.REQUEST |
          arpType == SW.ARP_Type.REPLY)
  )
}

object StructuredEthernetMessage_i_Payload {
  def example(): StructuredEthernetMessage_i_Payload = {
    return StructuredEthernetMessage_i_Payload(SW.StructuredEthernetMessage_i.example())
  }
}

@datatype class StructuredEthernetMessage_i_Payload(value: SW.StructuredEthernetMessage_i) extends art.DataContent
